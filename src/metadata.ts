/* eslint-disable */
export default async () => {
    const t = {
        ["./user/entities/user.entity"]: await import("./user/entities/user.entity"),
        ["./user/entities/profile.entity"]: await import("./user/entities/profile.entity"),
        ["./user/role/entities/role.entity"]: await import("./user/role/entities/role.entity"),
        ["./utils/constants"]: await import("./utils/constants")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/entities/profile.entity"), { "Profile": { id: { required: true, type: () => String }, user: { required: true, type: () => t["./user/entities/user.entity"].User }, phoneNumber: { required: true, type: () => String }, address: { required: true, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, country: { required: true, type: () => String }, postalCode: { required: true, type: () => String } } }], [import("./user/role/entities/role.entity"), { "Role": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./user/entities/user.entity"), { "User": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, password: { required: true, type: () => String }, emailVerificationToken: { required: true, type: () => String }, passwordResetToken: { required: true, type: () => String }, isEmailVerified: { required: true, type: () => Boolean }, profile: { required: true, type: () => t["./user/entities/profile.entity"].Profile }, role: { required: true, type: () => t["./user/role/entities/role.entity"].Role }, roleName: { required: true, type: () => String }, acceptedInvite: { required: true, type: () => Boolean }, registrationType: { required: true, type: () => String, enum: t["./utils/constants"].RegistrationTypeEnum }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String }, roleName: { required: false, enum: t["./utils/constants"].RoleNameEnum } } }], [import("./user/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./user/role/dto/create-role.dto"), { "CreateRoleDto": { name: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./user/role/dto/update-role.dto"), { "UpdateRoleDto": {} }], [import("./services/meta/dto/whatsapp.dto"), { "WhatsAppMessageResponseDto": { 'messaging_product': { required: true, type: () => String }, 'contacts': { required: true }, 'messages': { required: true } }, "WhatsAppMessageTemplateTextDto": { recipientNumber: { required: true, type: () => String }, templateName: { required: true, type: () => String }, namedParamaterInput: { required: true, type: () => ({ type: { required: true, type: () => String }, parameters: { required: true } }) }, positionalParamaterInput: { required: true, type: () => ({ type: { required: true, type: () => String }, parameters: { required: true } }) } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./user/user.controller"), { "UserController": { "create": { type: t["./user/entities/user.entity"].User }, "findById": { type: t["./user/entities/user.entity"].User }, "update": { type: t["./user/entities/user.entity"].User }, "delete": { type: t["./user/entities/user.entity"].User } } }], [import("./user/role/role.controller"), { "RoleController": { "create": { type: t["./user/role/entities/role.entity"].Role }, "findAll": { type: [t["./user/role/entities/role.entity"].Role] }, "findOne": { type: t["./user/role/entities/role.entity"].Role }, "update": {}, "remove": {} } }]] } };
};